import{CONFIG}from"./config.min.js";import{URLManager}from"./utils.min.js";import{classifyImage}from"./infapi.min.js";const urlManager=new URLManager;class PrivacyManager{constructor(){this.elements={privacyLink:document.getElementById("privacy-link"),privacyPopup:document.getElementById("privacy-popup"),closeButton:document.getElementById("close-privacy-popup"),acceptButton:document.getElementById("accept-privacy-policy"),rejectButton:document.getElementById("reject-privacy-policy"),checkbox:document.getElementById("privacy-checkbox"),uploadButton:document.getElementById("image-upload")};this.initializeEventListeners()}initializeEventListeners(){this.elements.privacyLink?.addEventListener("click",this.openPopup);this.elements.closeButton?.addEventListener("click",this.closePopup);this.elements.acceptButton?.addEventListener("click",this.acceptPolicy);this.elements.rejectButton?.addEventListener("click",this.rejectPolicy);this.elements.checkbox?.addEventListener("change",this.toggleUploadButton)}openPopup=e=>{e.preventDefault();if(this.elements.privacyPopup){this.elements.privacyPopup.style.display="block"}};closePopup=()=>{if(this.elements.privacyPopup){this.elements.privacyPopup.style.display="none"}};acceptPolicy=()=>{if(this.elements.checkbox){this.elements.checkbox.disabled=false;this.elements.checkbox.checked=true}if(this.elements.uploadButton){this.elements.uploadButton.disabled=false}this.closePopup()};rejectPolicy=()=>{if(this.elements.checkbox){this.elements.checkbox.disabled=true;this.elements.checkbox.checked=false}if(this.elements.uploadButton){this.elements.uploadButton.disabled=true}this.closePopup();alert("Accept FLOOFS Privacy Policy Or Shoo Away!")};toggleUploadButton=()=>{if(this.elements.uploadButton&&this.elements.checkbox){this.elements.uploadButton.disabled=!this.elements.checkbox.checked}}}class ResultsDisplay{constructor(){this.resultsContainer=document.getElementById("results");this.resultsSection=document.getElementById("results-section");this.clearButton=document.getElementById("clear-results");this.clearButton?.addEventListener("click",this.clearAllResults)}displayResult(file,result){if(!this.resultsContainer||!result)return;const resultItem=document.createElement("div");resultItem.className="result-item";const img=document.createElement("img");const imageUrl=urlManager.createObjectURL(file);img.src=imageUrl;img.alt="Uploaded Image";resultItem.appendChild(img);const barChart=this.createBarChart(result[0].confidences);resultItem.appendChild(barChart);this.resultsContainer.appendChild(resultItem);if(this.resultsSection){this.resultsSection.style.display="block"}}createBarChart(confidences){const barChart=document.createElement("div");barChart.className="bar-chart";const fragment=document.createDocumentFragment();confidences.forEach((confidence=>{const bar=document.createElement("div");bar.className="bar";const barLabel=document.createElement("div");barLabel.className="bar-label";barLabel.textContent=`${confidence.label} ${Math.round(confidence.confidence*100)}%`;bar.appendChild(barLabel);const barProgress=document.createElement("div");barProgress.className="bar-progress";const barFill=document.createElement("div");barFill.className="bar-fill";barFill.style.width=`${confidence.confidence*100}%`;barProgress.appendChild(barFill);bar.appendChild(barProgress);fragment.appendChild(bar)}));barChart.appendChild(fragment);return barChart}clearAllResults=()=>{urlManager.cleanup();if(this.resultsContainer){this.resultsContainer.innerHTML=""}if(this.resultsSection){this.resultsSection.style.display="none"}}}class ExampleImages{constructor(resultsDisplay){this.resultsDisplay=resultsDisplay;this.examplesContainer=document.getElementById("examples-container");this.initializeExamples()}initializeExamples(){if(!this.examplesContainer)return;const fragment=document.createDocumentFragment();for(let i=0;i<2;i++){CONFIG.EXAMPLE_IMAGES.forEach((image=>{fragment.appendChild(this.createImageElement(image))}))}this.examplesContainer.appendChild(fragment)}createImageElement(imageName){const img=document.createElement("img");img.src=`inf_cs/${imageName}`;img.alt=`Image of a ${imageName.replace(/_/g," ").replace(/\.(jpeg|jpg|png)$/g,"")}`;img.className="example-image";img.addEventListener("click",(async()=>{try{const response=await fetch(img.src);const blob=await response.blob();const file=new File([blob],imageName,{type:blob.type});const result=await classifyImage(file);if(result){this.resultsDisplay.displayResult(file,result)}}catch(error){console.error("Error processing example image:",error);alert("Failed to process example image. Please try again.")}}));return img}}function getURLManager(){return urlManager}export{PrivacyManager,ResultsDisplay,ExampleImages,getURLManager};