import{FileValidator,fetchUserIP}from"./utils.min.js";import{classifyImage}from"./infapi.min.js";class FileUploadHandler{constructor(resultsDisplay){this.resultsDisplay=resultsDisplay;this.uploadButton=document.getElementById("image-upload");this.initializeEventListener()}initializeEventListener(){this.uploadButton?.addEventListener("change",this.handleFileUpload)}handleFileUpload=async event=>{const files=event.target.files;try{FileValidator.validateFiles(files);await this.logUploadMetadata(files);const promises=Array.from(files).map((async file=>{try{const result=await classifyImage(file);if(result){this.resultsDisplay.displayResult(file,result)}}catch(error){console.error(`Error processing file ${file.name}:`,error);alert(`Failed to process ${file.name}. Please try again.`)}}));await Promise.all(promises)}catch(error){alert(error.message);event.target.value=""}};async logUploadMetadata(files){try{const ip=await fetchUserIP();Array.from(files).forEach((file=>{const sanitizedName=FileValidator.sanitizeFileName(file.name);console.log(`Image uploaded by IP: ${ip}, File: ${sanitizedName}, Size: ${file.size}, Type: ${file.type}`)}))}catch(error){console.error("Error logging upload metadata:",error)}}}export{FileUploadHandler};