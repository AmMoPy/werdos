import e from"@emailjs/nodejs";import{randomBytes as t}from"crypto";function generateCSRFToken(){let r=t(32).toString("hex"),n=Date.now().toString(36),s=t(16).toString("hex"),o=`${r}-${n}-${s}`;return o}let csrfTokens=new Map;export default async function s(r,n){if(n.setHeader("Access-Control-Allow-Origin","https://ammopy.github.io/werdos"),n.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS"),n.setHeader("Access-Control-Allow-Headers","Content-Type"),n.setHeader("Access-Control-Allow-Credentials","true"),"OPTIONS"===r.method)return n.status(200).end();if("GET"===r.method){let s=generateCSRFToken();return csrfTokens.set(s,!0),n.setHeader("Set-Cookie",`csrfToken=${s}; HttpOnly; Secure; SameSite=None; Path=/`),n.status(200).json({success:!0})}if("POST"===r.method){if("application/json"!==r.headers["content-type"])return n.status(400).json({success:!1,error:"Invalid content type"});let o=r.cookies.csrfToken;if(!o||!csrfTokens.has(o))return n.status(403).json({success:!1,error:"Invalid CSRF token"});csrfTokens.delete(o);let{email:a,subject:c,message:l}=r.body;if(!a||!c||!l||!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(a)||c.length>100||l.length>1e3)return n.status(400).json({success:!1,error:"Invalid input data"});try{return await e.send(process.env.SERVICE_ID,process.env.TEMPLATE_ID,{email:a,subject:c,message:l},{publicKey:process.env.API_KEY}),n.status(200).json({success:!0})}catch(u){return console.error("EmailJS Error:",u.message||u),n.status(500).json({success:!1,error:"Failed to send email"})}}return n.status(405).json({success:!1,error:"Method not allowed"})};